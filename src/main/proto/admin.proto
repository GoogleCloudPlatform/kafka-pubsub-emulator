/*
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.google.cloud.partners.pubsub.kafka.common";
option java_outer_classname = "AdminProto";
option go_package = "google.golang.org/genproto/googleapis/pubsub/kafka/emulator/v1;admin";

package google.pubsub.kafka.emulator;

import "google/api/annotations.proto";

service Admin {

  // Checks metrics from pub/sub emulator
  rpc Statistics (StatisticsRequest) returns (StatisticsResponse) {
    option (google.api.http) = {
      get: "/v1/admin/statistics"
    };
  }

  // Get current configuration of pub/sub emulator
  rpc Configuration (ConfigurationRequest) returns (ConfigurationResponse) {
    option (google.api.http) = {
      get: "/v1/admin/configuration"
    };
  }

}

message ConfigurationRequest {
}

message ConfigurationResponse {
  string content = 1;
  enum Extension {
    JSON = 0;
  }
  Extension extension = 2;
}

message StatisticsRequest {
}

message StatisticsResponse {

  int32 publisherExecutors = 1;

  int32 subscriberExecutors = 2;

  map<string, StatisticsConsolidation> publisherByTopic = 3;

  map<string, StatisticsConsolidation> subscriberByTopic = 4;

}

message StatisticsConsolidation {

  repeated Metric metrics = 1;

}

message Metric {

  string name = 1;

  string description = 2;

  string value = 3;

}